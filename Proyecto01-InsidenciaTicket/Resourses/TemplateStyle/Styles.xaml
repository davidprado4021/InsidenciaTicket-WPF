<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
   
    <!-- #region Botton Keys-->
    <Style x:Key="RedButon_CircularS" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Fondo circular con la imagen -->
                        <Ellipse x:Name="ellipse">
                            <Ellipse.Fill>
                                <!-- Utilizamos un Binding para la imagen -->
                                <ImageBrush ImageSource="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Ellipse.Fill>
                        </Ellipse>
                        <!-- Rectángulo semitransparente para el efecto de cambio de color -->
                        <Rectangle x:Name="overlay" Fill="Transparent"/>
                        <!-- Contenido opcional del botón (p. ej., texto) -->
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Trigger para cambiar el color de fondo cuando el cursor está sobre el botón -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="overlay" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5" RadiusX="1.5" RadiusY="1.5">
                                        <GradientStop Color="#40FF0000" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NeutroButon_CircularS" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Fondo circular con la imagen -->
                        <Ellipse x:Name="ellipse">
                            <Ellipse.Fill>
                                <!-- Utilizamos un Binding para la imagen -->
                                <ImageBrush ImageSource="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Ellipse.Fill>
                        </Ellipse>
                        <!-- Rectángulo semitransparente para el efecto de cambio de color -->
                        <Rectangle x:Name="overlay" Fill="Transparent"/>
                        <!-- Contenido opcional del botón (p. ej., texto) -->
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Trigger para cambiar el color de fondo cuando el cursor está sobre el botón -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="overlay" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5" RadiusX="1.5" RadiusY="1.5">
                                        <GradientStop Color="#80000000" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!-- #region Background Keys-->
    <Style x:Key="EnhancedBorderBackgroundStyle" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <VisualBrush>
                    <VisualBrush.Visual>
                        <Grid>
                            <!-- Imagen de fondo en blanco y negro -->
                            <Image Source="pack://application:,,,/Proyecto01-InsidenciaTicket;component/Resourses/WallPaper/Wallpaper01.jpg"
                          Stretch="UniformToFill"/>
                            <!-- Rectángulo semitransparente con degradado de color morado, rosado y tercer color -->
                            <Rectangle>
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                        <GradientStop Color="#801C1C81" Offset="0"/>
                                        <!-- Morado -->
                                        <GradientStop Color="#801C1C81" Offset="0.3"/>
                                        <!-- Morado (punto de mezcla) -->
                                        <GradientStop Color="#80F57FB7" Offset="0.6"/>
                                        <!-- Rosado -->
                                        <GradientStop Color="#802A2A2A" Offset="1"/>
                                        <!-- Tercer color -->
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>